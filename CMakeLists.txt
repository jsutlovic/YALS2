cmake_minimum_required(VERSION 2.8)
project(YALS2)

set(CMAKE_VERBOSE_MAKEFILE off)

set(BIN_DIR ${YALS2_SOURCE_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BIN_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${BIN_DIR})

if (WIN32)
    set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
else ()
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -pedantic -std=c11 -funroll-loops")
    if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wl,-no_pie -msse4.2")
    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=native")
    endif()
    set(CMAKE_C_FLAGS_DEBUG "-g")
    set(CMAKE_C_FLAGS_RELEASE "-g -O3")
endif ()

find_package(GLEW REQUIRED)
find_package(OpenGL REQUIRED)
if (WIN32)
message("WINDOWS SDL2")
message("${SDL2_PATH}")
    find_package(SDL2 REQUIRED)
    find_package(SDL2_ttf REQUIRED)
    include_directories(${SDL2_TTF_INCLUDE_DIRS} ${GLEW_INCLUDE_DIR})
else ()
    include(FindPkgConfig)
    pkg_search_module(SDL2 REQUIRED sdl2)
    pkg_search_module(SDL2TTF REQUIRED SDL2_ttf)
    include_directories(${SDL2TTF_INCLUDE_DIRS} ${GLEW_INCLUDE_DIRS})
endif ()
include_directories(${SDL2_INCLUDE_DIRS} ${OPENGL_INCLUDE_DIRS})

add_subdirectory(src)